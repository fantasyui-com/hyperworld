import registry from 'registry';

import startCase from 'lodash/startCase.js';

export default class Screen {

  #session = null;
  #printer = null;

  constructor(session){
    this.#session = session;
  }

  async initialize(){

    const printerPath = `./Printer/${startCase(registry.screenPrinter)}.mjs`;
    const PrintModule = (await import(printerPath)).default;
    this.#printer = new PrintModule(this.#session);

  }

  async info(text){
    const data = {type:'alert', kind:'info', text};
    await this.#printer.print(data);
  }

  async warning(text){
    const data = {type:'alert', kind:'warning', text};
    await this.#printer.print(data);
  }

  async error(text){
    const data = {type:'alert', kind:'error', text};
    await this.#printer.print(data);
  }

  async input(data){
    return await this.#printer.input(data);
  }

  async select(data){
    return await this.#printer.select(data);
  }

  async prompt(data){
    return await this.#printer.prompt(data);
  }

}
