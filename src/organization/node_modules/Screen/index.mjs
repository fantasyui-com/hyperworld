import registry from 'registry';

import startCase from 'lodash/startCase.js';

// NOTE: REMOVE THIS, only used for parsing of syntax errors
import Json from './Printer/Json.mjs';
import Enquirer from './Printer/Enquirer.mjs';

export default class Screen {

  #session = null;
  #printer = null;

  constructor(session){
    this.#session = session;
  }

  async initialize(){

    try{
      const printerPath = `./Printer/${startCase(registry.screenPrinter)}.mjs`;
      const PrintModule = (await import(printerPath)).default;
      this.#printer = new PrintModule(this.#session);
    }catch(e){
      console.error(`Sigh, another error in Print Module.`);
      console.error(e);
    }

  }

  async data(data){
    return await this.#printer.data(data);
  }

  async info(text){
    const data = {type:'alert', kind:'info', text};
    return await this.#printer.print(data);
  }

  async warning(text){
    const data = {type:'alert', kind:'warning', text};
    return await this.#printer.print(data);
  }

  async danger(text){
    const data = {type:'alert', kind:'danger', text};
    return await this.#printer.print(data);
  }

  async error(text){
    const data = {type:'alert', kind:'danger', text};
    return await this.#printer.print(data);
  }

  async input(data){
    return await this.#printer.input(data);
  }

  async select(data){
    return await this.#printer.select(data);
  }

  async prompt(data){
    return await this.#printer.prompt(data);
  }

}
