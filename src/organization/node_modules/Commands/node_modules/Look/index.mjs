import registry from 'registry';

export default class Look {

  aliases = ['l', 'look'];

  constructor(){

  }

  async initialize(){

  }

  match({session, text, command, argument}){
    const response = this.aliases.some(alias=>{
      if( command[0] == alias ){
        return true;
      }
    })
    return response;
  }

  async execute({session, text, command, argument}){

    const screen = session.user.screen;
    const avatar = session.user.avatar;
    const location = session.user.avatar.location;


    await screen.warning(`Your avatar has entered a location called "${location.label}"`);

    const locations = location.getElements().map(i=>i.label);
    const origin = location.parent.label;

    if(locations.length) {
      let locationInformation = `Looking around it found ${locations.join(', ')}`;
      if((origin)&&(origin!=location.label)){
        locationInformation += ` and a gateway back to ${origin}`;
      }
      locationInformation += `.`;

      await screen.info(locationInformation);
    }else{
      await screen.info(`This location is empty.`);
    }


  }

}
